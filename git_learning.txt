Quick setup — if you’ve done this kind of thing before
or
https://github.com/imrankuruvitta/learning_git.git
git config --global user.name "Your Name"
git config --global user.email "your_email@example.com"

Get started by creating a new file or uploading an existing file. We recommend every repository include a README, LICENSE, and .gitignore .

…or create a new repository on the command line
echo "# learning_git" >> README.md
cd path/to/your-project
git init
git remote add origin https://github.com/imrankuruvitta/learning_git.git
git add README.md
git commit -m "first commit"
git branch -M main
git push -u origin main

…or push an existing repository from the command line
git remote add origin https://github.com/imrankuruvitta/learning_git.git
git branch -M main
git push -u origin main


Creating a new branch in Git is a straightforward process. You can use the following steps:

1. Create and Switch to a New Branch
If you want to create a new branch and immediately switch to it, you can use the following command:

bash
Copy
git checkout -b branch_name
Here:

-b tells Git to create a new branch.
branch_name is the name of your new branch (choose something descriptive based on the feature or task you're working on).
For example, to create a branch for a new feature:

bash
Copy
git checkout -b feature/add-login
2. Create a Branch Without Switching to It
If you want to create the branch but stay on your current branch, you can use the following command:

bash
Copy
git branch branch_name
For example, to create a new branch without switching to it:

bash
Copy
git branch feature/add-login
3. Push the New Branch to Remote Repository
Once you've created the new branch locally and made some commits, you might want to push it to a remote repository (like GitHub, GitLab, or Bitbucket). To do this, use:

bash
Copy
git push -u origin branch_name
For example, to push the feature/add-login branch to the remote repository:

bash
Copy
git push -u origin feature/add-login
The -u flag sets the upstream for the branch, so in future you can simply use git push and git pull without needing to specify the remote branch.

Summary of Commands:
Create and switch to a new branch: git checkout -b branch_name
Create a branch without switching to it: git branch branch_name
Push the new branch to a remote repository: git push -u origin branch_name

Git Pull from a Specific Remote and Branch
If you need to pull changes from a specific remote (e.g., origin) and branch (e.g., main), you can specify both:

bash
Copy
git pull origin main
In this example:

origin is the name of the remote repository (the default name for most repositories).
main is the branch you want to pull changes from.